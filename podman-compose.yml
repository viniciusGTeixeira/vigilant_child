version: '3.8'

name: pod_bigbrother

services:
  # PostgreSQL
  postgres:
    image: postgres:15-alpine
    container_name: pod-bigbrother-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: bigbrother_develop
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: bigbrother
    ports:
      - "5432:5432"
    volumes:
      - postgres_data_local:/var/lib/postgresql/data
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - localnet

  # Kafka
  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: pod-bigbrother-kafka
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - kafka_data:/var/lib/kafka/data
    depends_on:
      - zookeeper
    networks:
      - localnet

  # Zookeeper
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: pod-bigbrother-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - localnet

  # MinIO
  minio:
    image: minio/minio:latest
    container_name: pod-bigbrother-minio
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    networks:
      - localnet

  # FastAPI
  fastapi:
    build: ./fastapi
    container_name: pod-bigbrother-fastapi
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      DATABASE_URL: postgresql://admin:bigbrother@postgres:5432/bigbrother_develop
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      MINIO_ENDPOINT: minio:9000
      REDIS_URL: redis://redis:6379/0
    depends_on:
      - postgres
      - kafka
      - minio
      - redis
    networks:
      - localnet

  # Redis
  redis:
    image: redis:6.2-alpine
    container_name: pod-bigbrother-redis
    ports:
      - "6379:6379"
    networks:
      - localnet

  # MLflow
  mlflow:
    image: ghcr.io/mlflow/mlflow:latest
    container_name: pod-bigbrother-mlflow
    ports:
      - "5000:5000"
    environment:
      MLFLOW_S3_ENDPOINT_URL: http://minio:9000
      AWS_ACCESS_KEY_ID: minioadmin
      AWS_SECRET_ACCESS_KEY: minioadmin
    command:
      - mlflow
      - server
      - --host=0.0.0.0
      - --port=5000
      - --backend-store-uri=postgresql://admin:bigbrother@postgres:5432/bigbrother_develop
      - --default-artifact-root=s3://mlflow/
    depends_on:
      - postgres
      - minio
    networks:
      - localnet

  # Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: pod-bigbrother-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    networks:
      - localnet

  # Grafana
  grafana:
    image: grafana/grafana:latest
    container_name: pod-bigbrother-grafana
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: admin
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - localnet

networks:
  localnet:
    driver: bridge
    name: pod-bigbrother-network

volumes:
  postgres_data_local:
    name: pod-bigbrother-postgres-data
  kafka_data:
    name: pod-bigbrother-kafka-data
  minio_data:
    name: pod-bigbrother-minio-data
  prometheus_data:
    name: pod-bigbrother-prometheus-data
  grafana_data:
    name: pod-bigbrother-grafana-data 